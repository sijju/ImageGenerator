import React,{useState,useEffect} from 'react'
import {Loader,Card,Form} from '../components'

const RenderCards = ({data,title}) =>{
    if(data?.length > 0) {
        return data.map((post)=><Card key={post._id} {...post} />)
    }
    return (
        <h2 className='mt-5 font-bold text-[#6969ff] text-xl uppercase'>{title}</h2>
    )
}
const Home = () => {
    const [loading,setLoading] = useState(false)
    const [allPosts,setAllPosts] = useState(null)
    const [searchText,setSearchText] = useState(null)
    const [results,setSearchResults] = useState(null)
    const [searchTimeout,setSearchTimeout] = useState(null)
    useEffect(()=>{
        const fetchPosts = async () =>{
          setLoading(true)
          try {
            const res = await fetch('https://picai.onrender.com/api/post',{
                method : 'GET',
                headers : { 'Content-Type' : 'application/json' },
            })
            if(res.ok){
                const result = await res.json()
                setAllPosts(result.data.reverse())
            }
          } catch (error) {
            alert("Something is Wrong")
          }finally{
            setLoading(false)
          }
        }
        fetchPosts()
    },[])

    const handleSearch = (e) =>{
        clearTimeout(searchTimeout)
        setSearchText(e.target.value)
        setSearchTimeout(
           setTimeout(()=>{
               const searchResults = allPosts.filter((item)=> item.name.toLowerCase().includes(searchText.toLowerCase()) || 
               item.prompt.toLowerCase().includes(searchText.toLowerCase()))
               
               setSearchResults(searchResults)
            },300)
        ) 
    }
  return (
    <section className='max-w-7xl mx-auto'>
       <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>Community ShowCase</h1>
        <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'>
            Browse Through a collection of Images Generated By The Community Using DALL-E AI
        </p>
       </div>
       <div className='mt-16 '>
        <Form  type="text" name="text" placeholder="Search Posts" handleChange={handleSearch} value={searchText} />
       </div>
       <div className="mt-10">
        {loading ? (<div className='flex justify-center items-center'>
            <Loader />
        </div>) 
        : <>
         {searchText && (
            <h2 className='font-medium text-[#666e75] text-xl mb-3 '>
                Showing Results For <span className="text-[#222238]">{searchText}</span>
            </h2>
         )}
         <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
          {searchText ? (
            <RenderCards data={results} title="No Results Found" />
          ) : (<RenderCards data={allPosts} title='No Posts Found' />)}
         </div>
        </>
        }
       </div>
    </section>
  )
}

export default Home
