import React,{useState} from 'react'
import {useNavigate} from 'react-router-dom' 
import {preview} from '../assets'
import {downloadImage, getRandomPost} from '../utils'
import {Form,Loader} from '../components'
const CreatePost = () => {
  const navigate = useNavigate()
  const [form,setForm] = useState({
    name:'',
    prompt:'',
    photo:''
  })
  const _id = Math.floor(Math.random()*1000)
  const [generatingImg,setGeneratingImg] = useState(false)
  const [loading,setLoading] = useState(false)
  const handleSubmit = async(e) =>{
     e.preventDefault()
     if(form.prompt && form.photo){
      setLoading(true)
      try{
        const res = await fetch('http://localhost:8080/api/post',{
          method : 'POST',
          headers :{
            'Content-Type': 'application/json'
          },
          body : JSON.stringify(form)
        })
        await res.json()
        navigate('/')
      }catch(err){
        alert(err)
      }finally{
        setLoading(false)
      }
     }else{
      alert('Please enter the Prompt and generate an image')
     }
  }
  const handleChange = (e) =>{
      
      setForm ({...form ,[e.target.name] : e.target.value})
  }
  const handleSurprise = () =>{
      const randomPrompt = getRandomPost(prompt)
      setForm({...form,prompt:randomPrompt})
  }
  const generateImg = async(e)=>{
    e.preventDefault()
     if(form.prompt){
      try {
        setGeneratingImg(true);
        const res = await fetch('http://localhost:8080/api/ai',{
          method:'POST',
          headers :{
            'Content-Type': 'application/json',
          },
          body : JSON.stringify({prompt: form.prompt})
        })
        const data = await res.json()
        setForm({...form,photo:`data:image/jpeg;base64,${data.photo}`})
      } catch (error) {
        alert(error)
      }finally{
        setGeneratingImg(false)
      }
     }else{
      alert('Please Enter Prompt')
     }
  }
  return (
    <section className="max-w-7xl mx-auto">
      <div>
      <h1 className='font-extrabold text-[#222328] text-[32px]'>Create</h1>
        <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'>
           Create imaginative and visual collection of Images Generated By The Community Using DALL-E AI
        </p>
      </div>
      <form className="mt-16 max-w-3xl " onSubmit={handleSubmit}>
        <div className='flex flex-col gap-5'>
          <Form labelName="Name" type="text" name="name" placeholder = "Name" value={form.name} handleChange={handleChange} />
          <Form labelName="Prompt" type="text" name="prompt" placeholder = "Prompt" value={form.prompt} handleChange={handleChange} 
          isSurprise handleSurprise={handleSurprise}/>
          <div className='relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg first-letterfirst-line 
          focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center'>
            {form.photo ?(
               <img src={form.photo} alt={form.prompt} className="w-9/12 h-9/12 object-contain"/>
            ) : (<img src={preview} alt="Preview" className="w-9/12 h-9/12 object-contain bg-transparent opacity-40" />)}
            {generatingImg && (
              <div className='absolute flex justify-center items-center inset-0 z-0 bg-[rgba(0,0,0,0.3)] rounded-lg'>
                <Loader />
              </div>
            )}
          </div>
        </div>
        <div className='mt-5 flex gap-5'>
          <button onClick={generateImg} className='text-white bg-[#EC9999] font-medium  sm:w-auto px-5 py-2.5 text-center rounded-md '>
            {generatingImg ? 'Generating...' : 'Generate'}
          </button>
        </div>
       {form.photo ?  (
          <div className="flex gap-2">
            <button className='mt-3 text-white bg-[#20FF12] font-medium rounded-md text-sm  sm:w-auto px-5 py-2.5 text-center' onClick={()=>downloadImage(_id,form.photo)}>
              Download
            </button>
            <button type="submit" onClick={handleSubmit} className='mt-3 text-white bg-[#DD23E3] font-medium rounded-md text-sm  sm:w-auto px-5 py-2.5 text-center'>
              {loading ? "Sharing..." : 'Share With Community'}
            </button>
          </div>
       ) : ''} 
      </form>
    </section> 
  )
}

         
        

export default CreatePost